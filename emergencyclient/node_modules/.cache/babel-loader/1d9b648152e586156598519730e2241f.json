{"ast":null,"code":"var _jsxFileName = \"/home/moringa/emergencyApp/emergencyclient/src/components/Register.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst postUrl = 'https://slash-olivine-gardenia.glitch.me/comments';\n\nconst CommentForm = _ref => {\n  _s();\n\n  let {\n    onAddComment\n  } = _ref;\n  const [description, setDescription] = useState();\n\n  const handleInput = event => {\n    setDescription(event.target.value); // console.log(event.target.value)\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    console.log(\"submitted successfully\");\n    const inputData = {\n      description: description\n    };\n    fetch(postUrl, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(inputData)\n    }).then(res => res.json()).then(addNewComment => onAddComment(addNewComment));\n    setDescription(\"\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n        className: \"forminput\",\n        type: \"text\",\n        placeholder: \"Leave a comment\",\n        name: \"text\",\n        required: true,\n        value: description,\n        onChange: handleInput\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"formbutton\",\n        children: \"Write\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CommentForm, \"XkFiDczSOgJrDTXDasCEZbbez+Q=\");\n\n_c = CommentForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"CommentForm\");","map":{"version":3,"names":["React","useState","postUrl","CommentForm","onAddComment","description","setDescription","handleInput","event","target","value","handleSubmit","preventDefault","console","log","inputData","fetch","method","headers","body","JSON","stringify","then","res","json","addNewComment"],"sources":["/home/moringa/emergencyApp/emergencyclient/src/components/Register.js"],"sourcesContent":["\n\nimport React, { useState } from \"react\";\n\nconst postUrl='https://slash-olivine-gardenia.glitch.me/comments'\n\n\nconst CommentForm = ({ onAddComment }) => {\n  const [description, setDescription] = useState();\n\n  const handleInput = (event) => {\n    setDescription(event.target.value);\n    // console.log(event.target.value)\n  };\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    console.log(\"submitted successfully\");\n\n    const inputData = {\n      description: description,\n    };\n\n    fetch(postUrl, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(inputData),\n    })\n      .then((res) => res.json())\n      .then((addNewComment) => onAddComment(addNewComment));\n\n    setDescription(\"\");\n  };\n\n  return (\n    <div>\n      <form onSubmit={handleSubmit}>\n        <textarea\n          className=\"forminput\"\n          type=\"text\"\n          placeholder=\"Leave a comment\"\n          name=\"text\"\n          required\n          value={description}\n          onChange={handleInput}\n        />\n        <br />\n        <button type=\"submit\" className=\"formbutton\">\n          Write\n        </button>\n      </form>\n    </div>\n  );\n};"],"mappings":";;;AAEA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;AAEA,MAAMC,OAAO,GAAC,mDAAd;;AAGA,MAAMC,WAAW,GAAG,QAAsB;EAAA;;EAAA,IAArB;IAAEC;EAAF,CAAqB;EACxC,MAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCL,QAAQ,EAA9C;;EAEA,MAAMM,WAAW,GAAIC,KAAD,IAAW;IAC7BF,cAAc,CAACE,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAd,CAD6B,CAE7B;EACD,CAHD;;EAIA,MAAMC,YAAY,GAAIH,KAAD,IAAW;IAC9BA,KAAK,CAACI,cAAN;IACAC,OAAO,CAACC,GAAR,CAAY,wBAAZ;IAEA,MAAMC,SAAS,GAAG;MAChBV,WAAW,EAAEA;IADG,CAAlB;IAIAW,KAAK,CAACd,OAAD,EAAU;MACbe,MAAM,EAAE,MADK;MAEbC,OAAO,EAAE;QACP,gBAAgB;MADT,CAFI;MAKbC,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeN,SAAf;IALO,CAAV,CAAL,CAOGO,IAPH,CAOSC,GAAD,IAASA,GAAG,CAACC,IAAJ,EAPjB,EAQGF,IARH,CAQSG,aAAD,IAAmBrB,YAAY,CAACqB,aAAD,CARvC;IAUAnB,cAAc,CAAC,EAAD,CAAd;EACD,CAnBD;;EAqBA,oBACE;IAAA,uBACE;MAAM,QAAQ,EAAEK,YAAhB;MAAA,wBACE;QACE,SAAS,EAAC,WADZ;QAEE,IAAI,EAAC,MAFP;QAGE,WAAW,EAAC,iBAHd;QAIE,IAAI,EAAC,MAJP;QAKE,QAAQ,MALV;QAME,KAAK,EAAEN,WANT;QAOE,QAAQ,EAAEE;MAPZ;QAAA;QAAA;QAAA;MAAA,QADF,eAUE;QAAA;QAAA;QAAA;MAAA,QAVF,eAWE;QAAQ,IAAI,EAAC,QAAb;QAAsB,SAAS,EAAC,YAAhC;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAXF;IAAA;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA,QADF;AAmBD,CA/CD;;GAAMJ,W;;KAAAA,W"},"metadata":{},"sourceType":"module"}