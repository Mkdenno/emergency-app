[{"/home/moringa/emergencyApp/emergencyclient/src/index.js":"1","/home/moringa/emergencyApp/emergencyclient/src/App.js":"2","/home/moringa/emergencyApp/emergencyclient/src/components/Home.js":"3","/home/moringa/emergencyApp/emergencyclient/src/components/NavBar.js":"4","/home/moringa/emergencyApp/emergencyclient/src/components/Register.js":"5","/home/moringa/emergencyApp/emergencyclient/src/components/Login.js":"6","/home/moringa/emergencyApp/emergencyclient/src/components/Footer.js":"7","/home/moringa/emergencyApp/emergencyclient/src/components/Reports.js":"8","/home/moringa/emergencyApp/emergencyclient/src/components/ReportList.js":"9","/home/moringa/emergencyApp/emergencyclient/src/components/NewReportForm.js":"10","/home/moringa/emergencyApp/emergencyclient/src/components/About.js":"11","/home/moringa/emergencyApp/emergencyclient/src/components/EditUpdate.js":"12"},{"size":364,"mtime":1662584505276,"results":"13","hashOfConfig":"14"},{"size":1714,"mtime":1662751537482,"results":"15","hashOfConfig":"14"},{"size":2243,"mtime":1662785172972,"results":"16","hashOfConfig":"14"},{"size":564,"mtime":1662584633084,"results":"17","hashOfConfig":"14"},{"size":3250,"mtime":1662750237716,"results":"18","hashOfConfig":"14"},{"size":2644,"mtime":1662795944892,"results":"19","hashOfConfig":"14"},{"size":153,"mtime":1662294237807,"results":"20","hashOfConfig":"14"},{"size":1925,"mtime":1662541006752,"results":"21","hashOfConfig":"14"},{"size":1322,"mtime":1662934156347,"results":"22","hashOfConfig":"14"},{"size":2902,"mtime":1662936430877,"results":"23","hashOfConfig":"14"},{"size":726,"mtime":1662936311624,"results":"24","hashOfConfig":"14"},{"size":1717,"mtime":1662560847906,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},"kg7rtn",{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36"},{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58"},{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62"},{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/moringa/emergencyApp/emergencyclient/src/index.js",[],[],[],"/home/moringa/emergencyApp/emergencyclient/src/App.js",[],[],"/home/moringa/emergencyApp/emergencyclient/src/components/Home.js",["66"],[],"import React, { useState }from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport NavBar from \"./NavBar\";\n// import Footer from \"./Footer\";\n// import Reports from \"./Reports\";\nimport NewReportForm from \"./NewReportForm\";\nimport ReportList from \"./ReportList\";\n\n\nconst Home = ({ report, onAddReport ,onReportDelete}) => {\n  const [isHide, setIsHide] = useState(false);\n  // const [search, setSearch] = useState();\n  const [btnText, setBtnText] = useState(\"report an emergency\");\n  const [hideButtom, setHideButton] = useState(false);\n\n  let params = useParams();\n\n\n\n  const reportdisplay = report.map((repo) => (\n    <ReportList \n    id={repo.id} \n    repo={repo} \n    onReportDelete={onReportDelete}\n    params={params}\n    />\n  ));\n\n  const togglePopUp = () => {\n    if (isHide) {\n      setIsHide(\"\");\n      setBtnText(\"report an emergency\");\n    } else {\n      setIsHide(<NewReportForm params={params} onAddReport={onAddReport} />);\n      setBtnText(\"close\");\n    }\n  };\n\n  return (\n    <div>\n    <NavBar />\n    <div className=\"container-reports\">\n\n    <div className=\"form_container\">{true ? [isHide] : null}</div>\n\n      <div className=\"displayuserName\">\n        <h1 className=\"userdetails\">Welcome {params.username}!!</h1>\n      </div>\n      <div className=\"formcont\">\n    {\n      params.role === 'user' ? \n      <div style={{display: hideButtom}}>\n      <button className=\"add-btn\" onClick={togglePopUp} >\n        {btnText}\n      </button>\n    </div>\n  : ' '  \n  }\n      </div>\n\n        <div className=\"searchbar\">\n          <input type=\"text\" className=\"search\"  placeholder=\"search by title\" />\n          <h3 >Reports display</h3>\n\n        </div>\n\n        {/* Reports */}\n        <div className=\"reportsheader\">\n        </div>\n\n        <div className=\"displayreports\">\n          <table>\n            <thead>\n            <tr>\n              <th>Time&Date</th>\n              <th>Title</th>\n              <th>Description</th>\n              <th>Location</th>\n              <th>Action</th>\n            </tr>\n            </thead>\n            <tbody>\n            {reportdisplay}\n            </tbody>\n          </table>\n          </div>\n          </div>\n        {/* Reportscontainerends */}\n      </div>\n  );\n};\n\nexport default Home;\n","/home/moringa/emergencyApp/emergencyclient/src/components/NavBar.js",[],[],"/home/moringa/emergencyApp/emergencyclient/src/components/Register.js",[],[],"/home/moringa/emergencyApp/emergencyclient/src/components/Login.js",[],[],"/home/moringa/emergencyApp/emergencyclient/src/components/Footer.js",[],[],"/home/moringa/emergencyApp/emergencyclient/src/components/Reports.js",[],[],"/home/moringa/emergencyApp/emergencyclient/src/components/ReportList.js",[],[],"/home/moringa/emergencyApp/emergencyclient/src/components/NewReportForm.js",["67"],[],"import React, { useState } from \"react\";\n\nconst NewReportForm = ({ params,onAddReport, hidePopUp,handleupdateClick,id, repo }) => {\n  const [inputData, setInputData] = useState({\n    title: \"\",\n    description: \"\",\n    location: \"\",\n    user_id: \"\"\n\n  });\n\n  // 0703380880\n\n  // function handleupdateClick(){\n  //   fetch(`http://localhost:9292/updatereports/${id}`,{\n  //     method: \"PATCH\",\n  //     headers: {\n  //       \"Accept\": \"application/json\"\n  //     },\n  //     body: JSON.stringify(\n  //       {\n  //         title: inputData.title,\n  //         description: inputData.description,\n  //         location: inputData.location,\n\n  //       }\n  //     )\n\n\n  //   })\n  //   .then(res => res.json())\n  //   .then(res => console.log(res))\n\n  // }\n\n  // console.log(params.id)\n  const URL=\"https://emergencybackend.herokuapp.com\"\n  const handleInputChange = (event) => {\n    setInputData({\n        ...inputData,[event.target.name]: event.target.value\n    })\n  };\n  const handleInputDescription = (event) => {\n    setInputData({\n        ...inputData,[event.target.name]: event.target.value\n    })\n\n  };\n\n  const handleInputLocation = (event) => {\n    setInputData({\n        ...inputData,[event.target.name]: event.target.value\n    })\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const dataInput ={\n        title: inputData.title,\n        description: inputData.description,\n        location: inputData.location,\n        user_id:params.id\n    }\n\n    fetch(`${URL}/postreports`,{\n        method: \"POST\",\n        headers: {\n            \"content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(dataInput)\n    })\n    .then((res) => res.json())\n    .then((data) => onAddReport(data));\n\n    setInputData({\n      title: \"\",\n      description: \"\",\n      location: \"\",\n    })\n    window.location.reload();\n  };\n  return (\n    <div>\n      <form onSubmit={handleSubmit} className=\"formR\">\n        <input\n          type=\"text\"\n          name=\"title\"\n          placeholder=\"Enter Type of emergency report\"\n          onChange={handleInputChange}\n          value={inputData.title}\n        />\n        <br />\n        <textarea\n          type=\"text\"\n          name=\"description\"\n          placeholder=\"Enter Description of emergency report\"\n          onChange={handleInputDescription}\n          value={inputData.description}\n        />\n        <br />\n        <input\n          type=\"text\"\n          name=\"location\"\n          placeholder=\"Enter Location of emergency report\"\n          onChange={handleInputLocation}\n          value={inputData.location}\n        />\n        <br />\n\n        <div className=\"action_btn\">\n        <button type=\"submit\" className=\"report-btn\">\n          Submit\n        </button>\n\n        <a className=\"close-btn\" onClick={hidePopUp}>\n          Close\n        </a>\n        </div>\n        \n      </form>\n    </div>\n  );\n};\n\nexport default NewReportForm;\n","/home/moringa/emergencyApp/emergencyclient/src/components/About.js",["68"],[],"import React from 'react'\nimport NavBar from './NavBar'\n\nconst About = () => {\n  return (\n    <div>\n        <NavBar/>\n        <div className=\"ambulencedescription\">\n      <div className=\"description\">\n        <h2>Ambulance</h2>\n        <p>vehicle equipped to provide emergency care to sick or injured people and to get them to hospital.\n           Ambulances can also be used to transport patients between hospitals. There are several types of ambulance</p>\n\n      </div>\n      <img src=\"https://images.unsplash.com/photo-1554734867-bf3c00a49371?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxzZWFyY2h8MXx8ZW1lcmdlbmN5fGVufDB8fDB8fA%3D%3D&auto=format&fit=crop&w=500&q=60\" alt=\"image\"/>\n     </div>\n\n\n    </div>\n  )\n}\n\nexport default About","/home/moringa/emergencyApp/emergencyclient/src/components/EditUpdate.js",[],[],{"ruleId":"69","severity":1,"message":"70","line":14,"column":22,"nodeType":"71","messageId":"72","endLine":14,"endColumn":35},{"ruleId":"73","severity":1,"message":"74","line":115,"column":9,"nodeType":"75","endLine":115,"endColumn":54},{"ruleId":"76","severity":1,"message":"77","line":15,"column":7,"nodeType":"75","endLine":15,"endColumn":202},"no-unused-vars","'setHideButton' is assigned a value but never used.","Identifier","unusedVar","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop."]